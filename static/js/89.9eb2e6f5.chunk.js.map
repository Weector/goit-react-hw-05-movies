{"version":3,"file":"static/js/89.9eb2e6f5.chunk.js","mappings":"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","sources":["components/API/moviesFetch.js","components/loader/spinner.js","components/Pages/MovieDetails/movieDetails.styled.jsx","components/Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'api_key=936bad92f4a27fe8a667506dd7861007';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function moviesTrends() {\n  const response = await axios\n    .get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n    .then(resp => resp);\n\n  return response.data;\n}\n\nexport async function moviesInfo(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}?${API_KEY}&language=en-US`)\n    .then(resp => resp);\n\n  return response.data;\n}\n\nexport async function moviesCast(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/credits?${API_KEY}&language=en-US`)\n    .then(resp => resp);\n\n  return response.data;\n}\n\nexport async function moviesReviews(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/reviews?${API_KEY}&language=en-US&page=1`)\n    .then(resp => resp);\n\n  return response.data;\n}\n\nexport async function moviesSearch(query) {\n  const response = await axios\n    .get(\n      `${BASE_URL}search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(resp => resp);\n\n  return response.data;\n}\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Spinner = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"3\"\n      animationDuration=\"0.75\"\n      width=\"150\"\n      visible={true}\n    />\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBack = styled(Link)`\n  position: absolute;\n  top: 9px;\n  left: 30px;\n  padding: 10px;\n  background-color: #090231;\n  color: #e9e5e5;\n  border: none;\n  border-radius: 10px;\n  border-bottom-left-radius: 100px;\n  border-top-left-radius: 100px;\n  text-decoration: none;\n  font-size: 20px;\n\n  transition: background-attachment 500ms ease;\n\n  :hover,\n  :focus {\n    background-color: #4533d4;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n  max-width: 700px;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-top: 30px;\n  padding: 20px;\n\n  border-radius: 10px;\n  box-shadow: rgba(134, 130, 130, 0.06) 0px 2px 4px 0px inset;\n`;\n\nexport const Button = styled.button`\n  margin-left: 30px;\n  padding: 5px;\n  width: 100px;\n  background-color: #090231;\n  color: #e9e5e5;\n  border: none;\n  border-radius: 10px;\n  text-decoration: none;\n  font-size: 20px;\n\n  transition: background-attachment 500ms ease;\n\n  :hover,\n  :focus {\n    background-color: #4533d4;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { moviesInfo } from 'components/API/moviesFetch';\nimport { Spinner } from 'components/loader/spinner';\nimport { Button, ButtonBack, Container } from './movieDetails.styled';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const navigate = useNavigate();\n  const params = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/products';\n\n  useEffect(() => {\n    moviesInfo(params.movieId).then(setDetails);\n  }, [params]);\n\n  const movieRating = Math.round(details.vote_average * 10);\n\n  return (\n    <div>\n      <ButtonBack to={backLinkHref}>Back</ButtonBack>\n      {!details.id ? (\n        <Spinner />\n      ) : (\n        <Container>\n          <img\n            src={`https://image.tmdb.org/t/p/original${details.poster_path}`}\n            alt={details.title}\n            width=\"320\"\n            height=\"500\"\n          />\n\n          <div>\n            <h2>{details.title}</h2>\n            <span>Rating: {movieRating}%</span>\n            <h3>Overview</h3>\n            <p>{details.overview}</p>\n            <h4>Genres</h4>\n            <ul>\n              {details?.genres?.map(({ name, id }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n            <div>\n              <h3>More info:</h3>\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  navigate(`cast`, { state: { from: location.state?.from } });\n                }}\n              >\n                Cast\n              </Button>\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  navigate(`reviews`, {\n                    state: { from: location.state?.from },\n                  });\n                }}\n              >\n                Reviews\n              </Button>\n            </div>\n          </div>\n        </Container>\n      )}\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","moviesTrends","axios","then","resp","response","data","moviesInfo","id","moviesCast","moviesReviews","moviesSearch","query","Spinner","strokeColor","strokeWidth","animationDuration","width","visible","ButtonBack","styled","Link","Container","Button","useState","details","setDetails","navigate","useNavigate","params","useParams","location","useLocation","backLinkHref","state","from","useEffect","movieId","movieRating","Math","round","vote_average","to","src","poster_path","alt","title","height","overview","genres","map","name","type","onClick"],"sourceRoot":""}